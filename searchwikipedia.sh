#!/usr/bin/env bash

FILEPATTERN='x\w\w\.wiki\.xz'
MATCH_7Z_REGEX="^.*\.7z$"
MATCH_XZ_REGEX="^.*\.xz$"
OPEN_OUT_FILE_WITH='codium'
OUTFILE='/home/jjenkx/wiki.matches.txt'
WORKINGDIR='/run/media/jjenkx/624234a4-629f-4abd-9d5d-7ac85213bf4b/DB/wikipedia/'




printf "\nThis script will search the 13.9GB text extracted wikipedia dump using pcre2 regex\n\n"

# Prompt for regex input
IFS= read -rp 'Input pcre2 regex to search the wikipedia dump:

regex: ' searchregex




# Print a newline for prettyness
printf "\n"




# Prompt for ripgrep --after-context --before-context size
IFS= read -rp 'Set number of lines to output before and after match:

rg -C value: ' ripgrepcontextsize




# Print a newline for prettyness
printf "\n"




# Escape the "-" character if at beginning of $searchregex so ripgrep wont interpret it as a flag
searchregexESCAPED="$(cat <<< $searchregex | perl -pe 's/\A(?=-)/\\/' )"




# Find files matching $FILEPATTERN variable. Run in parallel using all available cores: extract files to stdout, perform ripgrep search using $searchregex regex, and send matches to file $OUTFILE

if [[ $FILEPATTERN =~ $MATCH_XZ_REGEX ]];

then

    printf "Decompressing with xz because \$FILEPATTERN '$FILEPATTERN' matches \$MATCH_XZ_REGEX '$MATCH_XZ_REGEX'\n\n"
    
    find "$WORKINGDIR" -name '*' -type f -regextype posix-extended -iregex '(^.*\/'$FILEPATTERN'$)' | sort -g | parallel -j+0 --eta --bar 'printf "\n\n\n\n\n\n"{}"\n"; xz -kd --stdout "{}" | rg -j1 -iP -C "'$ripgrepcontextsize'" "'$searchregexESCAPED'" ' >"$OUTFILE" ; 

else

    if [[ $FILEPATTERN =~ $MATCH_7Z_REGEX ]];

    then

        printf "Decompressing with 7z because \$FILEPATTERN '$FILEPATTERN' matches \$MATCH_7Z_REGEX '$MATCH_7Z_REGEX'\n\n"

        find "$WORKINGDIR" -name '*' -type f -regextype posix-extended -iregex '(^.*\/'$FILEPATTERN'$)' | sort -g | 
        parallel -j+0 --eta --bar 'printf "\n\n\n\n\n\n"{}"\n"; 7z e -so "{}" | rg -j1 -iP -C "'$ripgrepcontextsize'" "'$searchregexESCAPED'" ' >"$OUTFILE" ; 

    else

        echo "\$FILEPATTERN '$FILEPATTERN' DOES NOT MATCH \$MATCH_XZ_REGEX '$MATCH_XZ_REGEX' or \$MATCH_7Z_REGEX '$MATCH_7Z_REGEX'"
        
    fi
fi




# Remove filenames from $OUTFILE (generated by "printf "\n\n\n\n\n\n"{}"\n"") that did not have matches
perl -C -Mutf8 -0777 -p -i -e "s/.*\/$FILEPATTERN\n+(?=.*\/$FILEPATTERN|\Z)//igm" "$OUTFILE"




# Open output file
"$OPEN_OUT_FILE_WITH" "$OUTFILE"




# Print a newline for prettyness
printf "\n"
