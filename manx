#!/usr/bin/env bash
# Purpose - Export a man page to various file formats
# Example name: manx
# Usage: manx bash
# Files output:
#   man.bash.pandoc.html5.html
#   man.bash.pandoc.html.html
#   man.bash.groff.html
#   man.bash.manly.html
#   man.bash.man.troff.ps
#   man.bash.gs.pdf
#   man.bash.gs.inverted.pdf

# Deps manly gs pandoc gzip
# git clone https://gitlab.com/es20490446e/manly.git
# cd manly && ./install-uninstall.sh
# sudo pacman -S --needed gs pandoc gzip

File_Browser=dolphin
Text_File_Output_Lines_Length=3000
Open_Text_File_Output_With=codium
ManualToRetrieve="$1"
SaveDir="$HOME/Documents/Manuals/$1/"
FilenamesPrefix="man."

mkdir -p "$SaveDir"

Man_Filepath="$(man --path "$1")"

if [ ! -f "$Man_Filepath" ]; then
exit 1
fi

output_text_file="$SaveDir$FilenamesPrefix$ManualToRetrieve.txt"

MANWIDTH=$Text_File_Output_Lines_Length man $ManualToRetrieve | col -bx > "$output_text_file" && $Open_Text_File_Output_With "$output_text_file"
echo "generating: "$FilenamesPrefix""$1".pandoc.html5.html"
pandoc --from man --to html5 <<< "$(zcat "$Man_Filepath")" > "$SaveDir""$FilenamesPrefix""$1".pandoc.html5.html

echo "generating: "$FilenamesPrefix""$1".pandoc.html.html"
pandoc --from man --to html <<< "$(zcat "$Man_Filepath")" > "$SaveDir""$FilenamesPrefix""$1".pandoc.html.html

echo "generating: "$FilenamesPrefix""$1".groff.html"
zcat "$Man_Filepath"  | groff -mandoc -Thtml >"$SaveDir""$FilenamesPrefix""$1".groff.html 2>/dev/null

echo "generating: "$FilenamesPrefix""$1".manly.html"
zcat "$Man_Filepath" | manly >"$SaveDir""$FilenamesPrefix""$1".manly.html 2>/dev/null

echo "generating: "$FilenamesPrefix""$1".man.troff.ps"
man --troff "$1" >"$SaveDir""$FilenamesPrefix""$1".man.troff.ps

echo "generating: "$FilenamesPrefix""$1".gs.pdf"
gs -q -o "$SaveDir""$FilenamesPrefix""$1".gs.pdf -sDEVICE=pdfwrite -f "$SaveDir""$FilenamesPrefix""$1".man.troff.ps

perl -pe 's/%!PS-Adobe-3.0 Resource-ProcSet\K/\n\{1 exch sub\} settransfer/gm' <"$SaveDir""$FilenamesPrefix""$1".man.troff.ps >"$SaveDir""$FilenamesPrefix""$1".man.troff.inverted.ps

echo "generating: "$FilenamesPrefix""$1".gs.inverted.pdf"
gs -q -o "$SaveDir""$FilenamesPrefix""$1".gs.inverted.pdf -sDEVICE=pdfwrite -f "$SaveDir""$FilenamesPrefix""$1".man.troff.inverted.ps 2>/dev/null

echo "$output_text_file"
echo "$SaveDir""$FilenamesPrefix""$1".pandoc.html5.html
echo "$SaveDir""$FilenamesPrefix""$1".pandoc.html.html
echo "$SaveDir""$FilenamesPrefix""$1".groff.html
echo "$SaveDir""$FilenamesPrefix""$1".manly.html
echo "$SaveDir""$FilenamesPrefix""$1".man.troff.ps
echo "$SaveDir""$FilenamesPrefix""$1".gs.pdf
echo "$SaveDir""$FilenamesPrefix""$1".gs.inverted.pdf
setsid >/dev/null 2>&1 </dev/null $File_Browser $SaveDir 2>&1 >/dev/null & 
